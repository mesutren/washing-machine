; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RL-ARM\Driver -I..\..\RL-ARM\Config -I..\..\RL-ARM\RL-RTX\inc -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F40XX --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.DispMenu||, CODE, READONLY, ALIGN=2

                  DispMenu PROC
;;;116    */
;;;117    static void DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;118    {
;;;119    	printf("\r\n请操作开发板上的按键和摇杆:\r\n");
000002  a009              ADR      r0,|L1.40|
000004  f7fffffe          BL       __2printf
;;;120    	printf("K1键       : 切换量程(5V或10V)\r\n");
000008  a00f              ADR      r0,|L1.72|
00000a  f7fffffe          BL       __2printf
;;;121    	printf("K2键       : 进入FIFO工作模式\r\n");
00000e  a017              ADR      r0,|L1.108|
000010  f7fffffe          BL       __2printf
;;;122    	printf("K3键       : 进入软件定时采集模式\r\n");
000014  a01d              ADR      r0,|L1.140|
000016  f7fffffe          BL       __2printf
;;;123    	printf("摇杆上下键 : 调节过采样参数\r\n");
00001a  a025              ADR      r0,|L1.176|
00001c  f7fffffe          BL       __2printf
;;;124    	printf("\r\n");
000020  a02b              ADR      r0,|L1.208|
000022  f7fffffe          BL       __2printf
;;;125    }
000026  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  |L1.40|
000028  0d0ac7eb          DCB      "\r\n",199,235,178,217,215,247,191,170,183,162,176,229,201
00002c  b2d9d7f7
000030  bfaab7a2
000034  b0e5c9  
000037  cfb5c4b0          DCB      207,181,196,176,180,188,252,186,205,210,161,184,203,":\r"
00003b  b4bcfcba
00003f  cdd2a1b8
000043  cb3a0d  
000046  0a00              DCB      "\n",0
                  |L1.72|
000048  4b31bcfc          DCB      "K1",188,252,"       : ",199,208,187,187,193,191,179,204
00004c  20202020
000050  2020203a
000054  20c7d0bb
000058  bbc1bfb3
00005c  cc      
00005d  283556bb          DCB      "(5V",187,242,"10V)\r\n",0
000061  f2313056
000065  290d0a00
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L1.108|
00006c  4b32bcfc          DCB      "K2",188,252,"       : ",189,248,200,235,"FIFO",185,164,215
000070  20202020
000074  2020203a
000078  20bdf8c8
00007c  eb464946
000080  4fb9a4d7
000084  f7c4a3ca          DCB      247,196,163,202,189,"\r\n",0
000088  bd0d0a00
                  |L1.140|
00008c  4b33bcfc          DCB      "K3",188,252,"       : ",189,248,200,235,200,237,188,254
000090  20202020
000094  2020203a
000098  20bdf8c8
00009c  ebc8edbc
0000a0  fe      
0000a1  b6a8cab1          DCB      182,168,202,177,178,201,188,175,196,163,202,189,"\r\n",0
0000a5  b2c9bcaf
0000a9  c4a3cabd
0000ad  0d0a00  
                  |L1.176|
0000b0  d2a1b8cb          DCB      210,161,184,203,201,207,207,194,188,252," : ",181,247,189
0000b4  c9cfcfc2
0000b8  bcfc203a
0000bc  20b5f7bd
0000c0  dab9fdb2          DCB      218,185,253,178,201,209,249,178,206,202,253,"\r\n",0
0000c4  c9d1f9b2
0000c8  cecafd0d
0000cc  0a00    
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L1.208|
0000d0  0d0a00            DCB      "\r\n",0
0000d3  00                DCB      0

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;134    */
;;;135    static void PrintfLogo(void)
000000  b510              PUSH     {r4,lr}
;;;136    {
;;;137    	printf("*************************************************************\n\r");
000002  a012              ADR      r0,|L2.76|
000004  f7fffffe          BL       __2printf
;;;138    	printf("* 例程名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
000008  a120              ADR      r1,|L2.140|
00000a  a02a              ADR      r0,|L2.180|
00000c  f7fffffe          BL       __2printf
;;;139    	printf("* 例程版本   : %s\r\n", DEMO_VER);		/* 打印例程版本 */
000010  a12d              ADR      r1,|L2.200|
000012  a02e              ADR      r0,|L2.204|
000014  f7fffffe          BL       __2printf
;;;140    	printf("* 发布日期   : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
000018  a131              ADR      r1,|L2.224|
00001a  a034              ADR      r0,|L2.236|
00001c  f7fffffe          BL       __2printf
;;;141    
;;;142    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;143    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
000020  2300              MOVS     r3,#0
000022  2203              MOVS     r2,#3
000024  2101              MOVS     r1,#1
000026  a036              ADR      r0,|L2.256|
000028  f7fffffe          BL       __2printf
;;;144    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;145    	printf("* \n\r");	/* 打印一行空格 */
00002c  a042              ADR      r0,|L2.312|
00002e  f7fffffe          BL       __2printf
;;;146    	printf("* QQ    : 1295744630 \r\n");
000032  a043              ADR      r0,|L2.320|
000034  f7fffffe          BL       __2printf
;;;147    	printf("* Email : armfly@qq.com \r\n");
000038  a047              ADR      r0,|L2.344|
00003a  f7fffffe          BL       __2printf
;;;148    	printf("* Copyright www.armfly.com 安富莱电子\r\n");
00003e  a04d              ADR      r0,|L2.372|
000040  f7fffffe          BL       __2printf
;;;149    	printf("*************************************************************\n\r");
000044  a001              ADR      r0,|L2.76|
000046  f7fffffe          BL       __2printf
;;;150    }
00004a  bd10              POP      {r4,pc}
                          ENDP

                  |L2.76|
00004c  2a2a2a2a          DCB      "*******************************************************"
000050  2a2a2a2a
000054  2a2a2a2a
000058  2a2a2a2a
00005c  2a2a2a2a
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a  
000083  2a2a2a2a          DCB      "******\n\r",0
000087  2a2a0a0d
00008b  00      
                  |L2.140|
00008c  56352d31          DCB      "V5-120_AD7606",163,168,"8",205,168,181,192,"16",206,187
000090  32305f41
000094  44373630
000098  36a3a838
00009c  cda8b5c0
0000a0  3136cebb
0000a4  cdacb2bd          DCB      205,172,178,189,"ADC",163,169,192,253,179,204,0
0000a8  414443a3
0000ac  a9c0fdb3
0000b0  cc00    
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L2.180|
0000b4  2a20c0fd          DCB      "* ",192,253,179,204,195,251,179,198,"   : %s\r\n",0
0000b8  b3ccc3fb
0000bc  b3c62020
0000c0  203a2025
0000c4  730d0a00
                  |L2.200|
0000c8  312e3200          DCB      "1.2",0
                  |L2.204|
0000cc  2a20c0fd          DCB      "* ",192,253,179,204,176,230,177,190,"   : %s\r\n",0
0000d0  b3ccb0e6
0000d4  b1be2020
0000d8  203a2025
0000dc  730d0a00
                  |L2.224|
0000e0  32303134          DCB      "2014-02-28",0
0000e4  2d30322d
0000e8  323800  
0000eb  00                DCB      0
                  |L2.236|
0000ec  2a20b7a2          DCB      "* ",183,162,178,188,200,213,198,218,"   : %s\r\n",0
0000f0  b2bcc8d5
0000f4  c6da2020
0000f8  203a2025
0000fc  730d0a00
                  |L2.256|
000100  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : V%d.%d."
000104  bcfebfe2
000108  b0e6b1be
00010c  203a2056
000110  25642e25
000114  642e    
000116  25642028          DCB      "%d (STM32F4xx_StdPeriph_Driver)\r\n",0
00011a  53544d33
00011e  32463478
000122  785f5374
000126  64506572
00012a  6970685f
00012e  44726976
000132  6572290d
000136  0a00    
                  |L2.312|
000138  2a200a0d          DCB      "* \n\r",0
00013c  00      
00013d  00                DCB      0
00013e  00                DCB      0
00013f  00                DCB      0
                  |L2.320|
000140  2a205151          DCB      "* QQ    : 1295744630 \r\n",0
000144  20202020
000148  3a203132
00014c  39353734
000150  34363330
000154  200d0a00
                  |L2.344|
000158  2a20456d          DCB      "* Email : armfly@qq.com \r\n",0
00015c  61696c20
000160  3a206172
000164  6d666c79
000168  4071712e
00016c  636f6d20
000170  0d0a00  
000173  00                DCB      0
                  |L2.372|
000174  2a20436f          DCB      "* Copyright www.armfly.com ",176,178,184,187,192,179,181
000178  70797269
00017c  67687420
000180  7777772e
000184  61726d66
000188  6c792e63
00018c  6f6d20b0
000190  b2b8bbc0
000194  b3b5    
000196  e7d7d30d          DCB      231,215,211,"\r\n",0
00019a  0a00    

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_widthprec
                  main PROC
;;;38     */
;;;39     int main(void)
000000  b508              PUSH     {r3,lr}
;;;40     {
;;;41     	uint8_t ucKeyCode;
;;;42     	uint8_t ucRefresh = 0;
000002  2400              MOVS     r4,#0
;;;43     	int32_t freq = 0;
000004  2500              MOVS     r5,#0
;;;44     
;;;45     	/*
;;;46     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;47     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;48     
;;;49     		系统时钟缺省配置为72MHz，如果需要更改，可以修改：
;;;50     		\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\system_stm32f10x.c
;;;51     		中配置系统时钟的宏。
;;;52     	*/
;;;53     
;;;54     	bsp_Init();
000006  f7fffffe          BL       bsp_Init
;;;55     
;;;56     /* AD7606进入普通工作模式 */
;;;57     
;;;58     	bsp_InitAD7606();	/* 配置AD7606所用的GPIO */
00000a  f7fffffe          BL       bsp_InitAD7606
;;;59     
;;;60     	EXTI_PI8_Config();
00000e  f7fffffe          BL       EXTI_PI8_Config
;;;61     
;;;62     	bsp_StartAutoTimer(1, 1000);	/* 启动1个1000ms的自动重装的定时器 */
000012  f44f717a          MOV      r1,#0x3e8
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       bsp_StartAutoTimer
;;;63     	AD7606_StartConvst();		/* 启动1次转换 */
00001c  f7fffffe          BL       AD7606_StartConvst
;;;64     	ucRefresh = 0;
000020  bf00              NOP      
;;;65     	while (1)
000022  e031              B        |L3.136|
                  |L3.36|
;;;66     	{
;;;67     		bsp_Idle();		/* 空闲时执行的函数,比如喂狗. 在bsp.c中 */
000024  f7fffffe          BL       bsp_Idle
;;;68     
;;;69     		if (ucRefresh == 1)
000028  2c01              CMP      r4,#1
00002a  d124              BNE      |L3.118|
;;;70     		{
;;;71     			ucRefresh = 0;
00002c  2400              MOVS     r4,#0
;;;72     			 freq = 1000/time;
00002e  4817              LDR      r0,|L3.140|
000030  6800              LDR      r0,[r0,#0]  ; time
000032  f44f717a          MOV      r1,#0x3e8
000036  fb91f5f0          SDIV     r5,r1,r0
;;;73     			/* 打印ADC采样结果 */
;;;74     			printf("Range = %d, OS = %d, ", g_tAD7606.ucRange, g_tAD7606.ucOS);
00003a  4815              LDR      r0,|L3.144|
00003c  7802              LDRB     r2,[r0,#0]  ; g_tAD7606
00003e  7841              LDRB     r1,[r0,#1]  ; g_tAD7606
000040  a014              ADR      r0,|L3.148|
000042  f7fffffe          BL       __2printf
;;;75     			printf("CH1 = %6d, CH2 = %6d, CH3 = %6d, CH4 = %6d, ",
000046  4812              LDR      r0,|L3.144|
000048  8b00              LDRH     r0,[r0,#0x18]
00004a  9000              STR      r0,[sp,#0]
00004c  4810              LDR      r0,|L3.144|
00004e  8ac3              LDRH     r3,[r0,#0x16]
000050  8a82              LDRH     r2,[r0,#0x14]
000052  8a41              LDRH     r1,[r0,#0x12]  ; g_tAD7606
000054  a015              ADR      r0,|L3.172|
000056  f7fffffe          BL       __2printf
;;;76     				g_tAD7606.sNowAdc[0], g_tAD7606.sNowAdc[1], g_tAD7606.sNowAdc[2], g_tAD7606.sNowAdc[3]);
;;;77     			printf("CH5 = %6d, CH6 = %6d, CH7 = %6d, CH8 = %6d\r\n",
00005a  480d              LDR      r0,|L3.144|
00005c  8c00              LDRH     r0,[r0,#0x20]
00005e  9000              STR      r0,[sp,#0]
000060  480b              LDR      r0,|L3.144|
000062  8bc3              LDRH     r3,[r0,#0x1e]
000064  8b82              LDRH     r2,[r0,#0x1c]
000066  8b41              LDRH     r1,[r0,#0x1a]
000068  a01c              ADR      r0,|L3.220|
00006a  f7fffffe          BL       __2printf
;;;78     				g_tAD7606.sNowAdc[4], g_tAD7606.sNowAdc[5], g_tAD7606.sNowAdc[6], g_tAD7606.sNowAdc[7]);
;;;79     
;;;80     
;;;81     
;;;82     			
;;;83     			
;;;84     /*			printf("CH1high = %d, CH1low = %d, CH2high = %d, CH2low = %d, ",
;;;85     				g_tAD7606.tcpadc[0], g_tAD7606.tcpadc[1], g_tAD7606.tcpadc[2], g_tAD7606.tcpadc[3]);
;;;86     			printf("CH3high = %d, CH3low = %d, CH4high = %d, CH4low = %d,\r\n",
;;;87     				g_tAD7606.tcpadc[4], g_tAD7606.tcpadc[5], g_tAD7606.tcpadc[6], g_tAD7606.tcpadc[7]);
;;;88     			printf("CH5high = %d, CH5low = %d, CH6high = %d, CH6low = %d, ",
;;;89     				g_tAD7606.tcpadc[8], g_tAD7606.tcpadc[9], g_tAD7606.tcpadc[10], g_tAD7606.tcpadc[11]);
;;;90     			printf("CH7high = %d, CH7low = %d, CH8high = %d, CH8low = %d\r\n ",
;;;91     				g_tAD7606.tcpadc[12], g_tAD7606.tcpadc[13], g_tAD7606.tcpadc[14], g_tAD7606.tcpadc[15]);*/
;;;92     			
;;;93     			printf("freq= %d\r\n", freq);
00006e  4629              MOV      r1,r5
000070  a026              ADR      r0,|L3.268|
000072  f7fffffe          BL       __2printf
                  |L3.118|
;;;94     			
;;;95     		}
;;;96     		
;;;97     			if (bsp_CheckTimer(1))
000076  2001              MOVS     r0,#1
000078  f7fffffe          BL       bsp_CheckTimer
00007c  b120              CBZ      r0,|L3.136|
;;;98     			{
;;;99     				/* 每隔500ms 进来一次. 由软件启动转换 */
;;;100    				AD7606_ReadNowAdc();		/* 读取采样结果 */
00007e  f7fffffe          BL       AD7606_ReadNowAdc
;;;101    				AD7606_StartConvst();		/* 启动下次转换 */
000082  f7fffffe          BL       AD7606_StartConvst
;;;102    
;;;103    				ucRefresh = 1;	/* 刷新显示 */
000086  2401              MOVS     r4,#1
                  |L3.136|
000088  e7cc              B        |L3.36|
;;;104    			}
;;;105    		}
;;;106    }
;;;107    
                          ENDP

00008a  0000              DCW      0x0000
                  |L3.140|
                          DCD      time
                  |L3.144|
                          DCD      g_tAD7606
                  |L3.148|
000094  52616e67          DCB      "Range = %d, OS = %d, ",0
000098  65203d20
00009c  25642c20
0000a0  4f53203d
0000a4  2025642c
0000a8  2000    
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L3.172|
0000ac  43483120          DCB      "CH1 = %6d, CH2 = %6d, CH3 = %6d, CH4 = %6d, ",0
0000b0  3d202536
0000b4  642c2043
0000b8  4832203d
0000bc  20253664
0000c0  2c204348
0000c4  33203d20
0000c8  2536642c
0000cc  20434834
0000d0  203d2025
0000d4  36642c20
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L3.220|
0000dc  43483520          DCB      "CH5 = %6d, CH6 = %6d, CH7 = %6d, CH8 = %6d\r\n",0
0000e0  3d202536
0000e4  642c2043
0000e8  4836203d
0000ec  20253664
0000f0  2c204348
0000f4  37203d20
0000f8  2536642c
0000fc  20434838
000100  203d2025
000104  36640d0a
000108  00      
000109  00                DCB      0
00010a  00                DCB      0
00010b  00                DCB      0
                  |L3.268|
00010c  66726571          DCB      "freq= %d\r\n",0
000110  3d202564
000114  0d0a00  
000117  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
